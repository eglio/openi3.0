<project name="openi" basedir="." default="default">
	
<!-- Import the subfloor-pkg.xml file which contains all the default ant targets -->
  <import file="build-res/subfloor-pkg.xml" />

	<property name="openi-sample.solutions.dir" value="${basedir}/package-res/openi-sample" description="" />
	
  <target name="install">
    <unzip src="${dist.dir}/${package.basename}.zip" dest="${pentaho.solutions.dir}/system" overwrite="true">
    </unzip>
    
    <copy todir="${pentaho.solutions.dir}/openi-sample" overwrite="true">
    	<fileset dir="${openi-sample.solutions.dir}"/>
    </copy>
  </target>

  <!-- 
  override the compile classpath to include the pentaho libraries from your platform installation
  -->
  <path id="classpath">
    <fileset dir="${devlib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${pentaho.lib.dir}">
      <include name="pentaho-bi-platform-*.jar" />
    </fileset>
    <dirset dir="${pentaho.classes.dir}" />
  </path>
  
  <!-- Copy all jars over to the plugin zip, 
  except for pentaho platform jars which the platform provides -->
  <target name="assemble.copy-libs">
    <copy todir="${approot.stage.dir}/lib">
      <fileset dir="${lib.dir}" excludes="pentaho-bi-platform-*.jar" />
      <fileset file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar" />
    </copy>
  </target>
  
  <!-- 
  The following overrides are in place to suppress IVY dependency management.  If you
  want to turn IVY back on, comment out these overrides. 
  -->
  <!-- Set default target to skip the ivy "resolve" step -->
  <target name="default" depends="clean-all,dist,package" />
  
  <!-- Set the clean-all target to skip the "clean-jars" step.  We do not want our build
  process to delete the "lib" dir -->
  <target name="clean-all" depends="clean"/>

</project>